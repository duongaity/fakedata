name: Build and Release

on:
  push:
    branches:
      - main
      - dev
      - feature/**

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: fakedata
  IMAGE_TAG: ${{ github.run_id }}

jobs:
  ## ===============================
  ## 1. Build Application + Push ECR
  ## ===============================
  buildApplication:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      # - name: Run Unit Tests
      #   run: ./mvnw test

#      - name: Run SonarCloud Scan
#        uses: sonarsource/sonarcloud-github-action@v2
#        with:
#          projectBaseDir: .
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build Spring Boot app
        run: ./mvnw clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin public.ecr.aws
          
      - name: Build and push Docker image
        run: |
          IMAGE_URI=public.ecr.aws/c3y1g3o1/duongaity/fakedata:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build and push Docker image
      #   run: |
      #     IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      #     docker build -t $IMAGE_URI .
      #     docker push $IMAGE_URI

  ## ===============================
  ## 2. Update GitOps Repo (Helm)
  ## ===============================
  processGitOps:
    runs-on: ubuntu-latest
    needs: buildApplication

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: duongaity/fakedata-gitops
          token: ${{ secrets.GIT_TOKEN }}
          path: gitops

      - name: Update image tag in values.yaml
        run: |
          echo "Repo structure:"
          ls -al gitops
          
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV_DIR="prod"
          else
            ENV_DIR="nonprod"
          fi

          cd gitops/$ENV_DIR
          sed -i "s/tag: \".*\"/tag: \"${{ github.run_id }}\"/" values.yaml

      - name: Commit and push changes
        run: |
          cd gitops
          git config user.name "Duong Aity"
          git config user.email "duongaity@gmail.com"
          git add .
          git commit -m "chore: update image tag to ${{ github.run_id }}"
          git push origin main
